name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    outputs:
      env: ${{ steps.Update-Minor-Version.outputs.env }}

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Update-Minor-Version
      id: step1
      run: |
        cd myapp
        current_version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        new_version=$(echo $current_version | awk -F '.' '{printf "%d.%d.%d", $1, $2+1, 0}')
        mvn versions:set -DnewVersion=${new_version}
        echo $new_version > version.txt
        echo "NEW_VERSION=${new_version}" >> $GITHUB_ENV
        echo "NEW_VERSION set to: $new_version"
        echo "Output from Step 1: $(cat version.txt)"
        mv version.txt $GITHUB_WORKSPACE

    - name: Build-with-Maven
      run: |
        mvn -B package --file ./myapp/pom.xml
        
    - name: build-with-Docker
      run: |
        echo "Output from Step 1: $(cat $GITHUB_WORKSPACE/version.txt)"
        docker build -t myapp:$(cat $GITHUB_WORKSPACE/version.txt) --build-arg .
        echo "------ docker image ls -----------------"
        docker image ls | grep myapp
        echo "dckr_pat_3Unwl6pTFz-frW1QcshL5RinYmc" | docker login -u jrstation --password-stdin
        
    - name: Push Docker Image to Docker Hub
      run: |
       docker push jrstation/myapp:$(cat $GITHUB_WORKSPACE/version.txt)
